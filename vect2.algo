PROCEDURE dot_product ( v1,v2:ARRAY_OF INTEGER, VAR ps: INTEGER)
VAR
   n,i,j: INTEGER;
BEGIN
    FOR i FROM 0 TO n-1 DO
    ps:= ps + v1[i]*v2[i];
END




/**************************
FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i, ps : INTEGER;
BEGIN
    ps :=0;
    i:=0;
    WHILE (i <v1.length ) DO
        ps := ps + v1[i]*v2[i];
    END_WHILE
    RETURN ps ;
END


/*****************************
ALGORITHM orthogonal_vectors
VAR
    v1  : ARRAY_OF FLOAT[100];
    v2  : ARRAY_OF FLOAT[100];
    i,n: INTEGER;
    ps: FLOAT;
	
BEGIN
    pot_product(v1, v2, ps);
    IF (ps = 0) THEN
        Write ("The two vectors are orthogonals");
    ELSE
        Write ("the two vectors are not orthogonals");
    END_IF
END
